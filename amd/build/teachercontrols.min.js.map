{"version":3,"file":"teachercontrols.min.js","sources":["../src/teachercontrols.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Allows the teacher to control the polling of one question.\n * Currently, the teacher can only stop the question.\n *\n * @module     quizaccess_tcquiz\n * @copyright  2024 Capilano University\n * @author     Tamara Dakic <tdakic@capilanou.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst Selectors = {\n    actions: {\n        endquestionButton: '[data-action=\"quizaccess_tcquiz/end-question_button\"]',\n        //nextquestionButton: '[data-action=\"quizaccess_tcquiz/next-question_button\"]',\n    },\n    regions: {\n        numAnswers: '[data-region=\"quizaccess_tcquiz/numberanswers_span\"]',\n        timeLeft: '[data-region=\"quizaccess_tcquiz/timeleft_span\"]',\n },\n};\n\nconst registerEventListeners = (sessionid, quizid, cmid, attemptid, page, time_for_question, POLLING_INTERVAL) => {\n\n/*  left here to use when a better teacher controls are added\ndocument.addEventListener('click', async(e) => {\n        if (e.target.closest(Selectors.actions.nextquestionButton)) {\n          e.preventDefault();\n          page++;\n          clearInterval(updateNumAnswersEvent);\n          updateNumAnswersEvent = null;\n          document.querySelector(Selectors.regions.timeLeft).innerHTML = 0; //will this stop setInterval?\n\n          var  result = await fetch(M.cfg.wwwroot+'/mod/quiz/accessrule/tcquiz/quizdatateacher.php?requesttype=getquestion&quizid='\n            +quizid+'&joincode='+joincode+'&cmid='+ cmid +'&attempt='+attemptid\n          +'&sessionid='+sessionid+'&rejoin=false&page='+page+'&sesskey='+ M.cfg.sesskey,{method: 'POST'});\n\n          var response_xml_text = await result.text();\n          await  parse_next_url(response_xml_text);\n\n        }\n  },{once: true} );\n*/\n\n  //this should prevent \"Unsaved changes\" pop-up which might happen if the teacher interacts with the\n  //question and then clicks on the End question button\n  window.addEventListener('beforeunload', function (event) {\n    event.stopImmediatePropagation();\n  });\n\n  // handles teacher clicking on the End question button\n  const endQuestionAction = document.querySelector(Selectors.actions.endquestionButton);\n  endQuestionAction.addEventListener('click', async(e) => {\n            e.preventDefault();\n            clearInterval(updateNumAnswersEvent);\n            updateNumAnswersEvent = null;\n\n            document.querySelector(Selectors.regions.timeLeft).innerHTML = 0; //will this stop setInterval?\n            const req = new XMLHttpRequest();\n            req.open(\"POST\", M.cfg.wwwroot+\n              '/mod/quiz/accessrule/tcquiz/change_question_state.php?sessionid='+sessionid+'&cmid='+cmid);\n            req.send();\n\n            req.onload = () => {\n              document.getElementById('responseform').submit();\n            };\n    },{once: true} );\n\n    var updateNumAnswersEvent = setInterval(async () =>\n      {await update_number_of_answers(sessionid, quizid, cmid, attemptid);}, POLLING_INTERVAL);\n\n\n    var timeLeft = time_for_question; //+1 to wait for everyone?\n\n    //teacher timer\n    var timer = setInterval(function() {\n        var timeLeft_html = document.querySelector(Selectors.regions.timeLeft);\n        timeLeft--;\n        timeLeft_html.innerHTML = timeLeft;\n\n        if (timeLeft <= 0) {\n          clearInterval(timer);\n          timer = null;\n          clearInterval(updateNumAnswersEvent);\n          updateNumAnswersEvent = null;\n          timeLeft_html.innerHTML = 0;\n          document.getElementById('responseform').submit();\n        }\n    }, 1000);\n\n};\n\n/**\n * Retrieves and updates the number of received student answers\n * @param {sessionid} sessionid The id of the current session.\n * @param {quizid} quizid The quizid of the current quiz.\n * @param {cmid} cmid Course module id of the current quiz.\n * @param {attemptid} attemptid The attemptid of the teacher's attempt.\n */\nasync function update_number_of_answers(sessionid, quizid, cmid, attemptid) {\n\n  var  result = await fetch(M.cfg.wwwroot+'/mod/quiz/accessrule/tcquiz/quizdatateacher.php?requesttype=getnumberanswers&quizid='\n    +quizid+'&sessionid='+sessionid+'&cmid='+ cmid +'&attempt='+attemptid\n    +'&sesskey='+ M.cfg.sesskey,{method: 'POST'});\n\n  var response_xml_text = await result.text();\n\n  await update_num_answers_html(response_xml_text);\n\n}\n\n/**\n * helper function to update the html with number of submitted answers\n * @param {string} response_xml_text\n */\nfunction update_num_answers_html(response_xml_text){\n\n  var parser = new DOMParser();\n  var response_xml = parser.parseFromString(response_xml_text, 'text/html');\n\n  var quizresponse = response_xml.getElementsByTagName('tcquiz').item(0);\n\n  var number_of_answers = quizresponse.getElementsByTagName('numanswers').item(0).textContent;\n  document.querySelector(Selectors.regions.numAnswers).innerHTML = number_of_answers;\n}\n\n/**\n * helper function to replace the current page with the attempt page specified in the response_xml_text\n * @param {string} response_xml_text\n */\n/*function parse_next_url(response_xml_text){\n\n  var parser = new DOMParser();\n  var response_xml = parser.parseFromString(response_xml_text, 'text/html');\n\n  var quizresponse = response_xml.getElementsByTagName('tcquiz').item(0);\n  var next_url = quizresponse.getElementsByTagName('url').item(0).textContent;\n\n  window.location.replace(next_url);\n\n}*/\n\nexport const init = (sessionid, quizid, cmid, attemptid, page, time_for_question,POLLING_INTERVAL) => {\n\n  registerEventListeners(sessionid, quizid, cmid, attemptid, page, time_for_question, POLLING_INTERVAL);\n};\n"],"names":["Selectors","actions","endquestionButton","regions","numAnswers","timeLeft","registerEventListeners","sessionid","quizid","cmid","attemptid","page","time_for_question","POLLING_INTERVAL","window","addEventListener","event","stopImmediatePropagation","document","querySelector","async","e","preventDefault","clearInterval","updateNumAnswersEvent","innerHTML","req","XMLHttpRequest","open","M","cfg","wwwroot","send","onload","getElementById","submit","once","setInterval","result","fetch","sesskey","method","response_xml_text","text","response_xml","DOMParser","parseFromString","number_of_answers","getElementsByTagName","item","textContent","update_num_answers_html","update_number_of_answers","timer","timeLeft_html","_exports","init"],"mappings":";;;;;;;;;;AAyBA,MAAMA,UAAY,CACdC,QAAS,CACLC,kBAAmB,yDAGvBC,QAAS,CACLC,WAAY,uDACZC,SAAU,oDAIZC,uBAAyBA,CAACC,UAAWC,OAAQC,KAAMC,UAAWC,KAAMC,kBAAmBC,oBAwB3FC,OAAOC,iBAAiB,gBAAgB,SAAUC,OAChDA,MAAMC,8BAIkBC,SAASC,cAAcnB,UAAUC,QAAQC,mBACjDa,iBAAiB,SAASK,UAClCC,EAAEC,iBACFC,cAAcC,uBACdA,sBAAwB,KAExBN,SAASC,cAAcnB,UAAUG,QAAQE,UAAUoB,UAAY,EAC/D,MAAMC,IAAM,IAAIC,eAChBD,IAAIE,KAAK,OAAQC,EAAEC,IAAIC,QACrB,mEAAmExB,UAAU,SAASE,MACxFiB,IAAIM,OAEJN,IAAIO,OAAS,KACXf,SAASgB,eAAe,gBAAgBC,QAAQ,CACjD,GACP,CAACC,MAAM,IAET,IAAIZ,sBAAwBa,aAAYjB,gBA+B5CA,eAAwCb,UAAWC,OAAQC,KAAMC,WAE/D,IAAK4B,aAAeC,MAAMV,EAAEC,IAAIC,QAAQ,uFACrCvB,OAAO,cAAcD,UAAU,SAAUE,KAAM,YAAYC,UAC3D,YAAamB,EAAEC,IAAIU,QAAQ,CAACC,OAAQ,SAEnCC,wBAA0BJ,OAAOK,aAUvC,SAAiCD,mBAE/B,IACIE,cADS,IAAIC,WACSC,gBAAgBJ,kBAAmB,aAIzDK,kBAFeH,aAAaI,qBAAqB,UAAUC,KAAK,GAE/BD,qBAAqB,cAAcC,KAAK,GAAGC,YAChFhC,SAASC,cAAcnB,UAAUG,QAAQC,YAAYqB,UAAYsB,kBAhB3DI,CAAwBT,mBAtCnBU,CAAyB7C,UAAWC,OAAQC,KAAMC,UAAU,GAAIG,kBAGrER,SAAWO,kBAGXyC,MAAQhB,aAAY,WACpB,IAAIiB,cAAgBpC,SAASC,cAAcnB,UAAUG,QAAQE,UAC7DA,WACAiD,cAAc7B,UAAYpB,SAEtBA,UAAY,IACdkB,cAAc8B,OACdA,MAAQ,KACR9B,cAAcC,uBACdA,sBAAwB,KACxB8B,cAAc7B,UAAY,EAC1BP,SAASgB,eAAe,gBAAgBC,YAE3C,IAAK,EAyDVoB,SAAAC,KAHkBA,CAACjD,UAAWC,OAAQC,KAAMC,UAAWC,KAAMC,kBAAkBC,oBAE/EP,uBAAuBC,UAAWC,OAAQC,KAAMC,UAAWC,EAAMC,kBAAmBC,iBAAiB,CACrG"}