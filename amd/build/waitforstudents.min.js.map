{"version":3,"file":"waitforstudents.min.js","sources":["../src/waitforstudents.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Wait for the students to connect to tcquiz session.\n * Redisplay the number of connected students every POLLING_INTERVAL miliiseconds\n *\n * @module     quizaccess_tcquiz\n * @copyright  2024 Capilano University\n * @author     Tamara Dakic <tdakic@capilanou.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst Selectors = {\n    actions: {\n        nextButton: '[data-action=\"quizaccess_tcquiz/waitforstudents-next_button\"]',\n        },\n        regions: {\n            numStudentsSpan: '[data-region=\"quizaccess_tcquiz/numberstudents_span\"]',\n        },\n};\n\nconst registerEventListeners = (sessionid, quizid, cmid, attemptid, POLLING_INTERVAL) => {\n\n  var updateNumStudentsEvent = setInterval(async () =>\n    {await update_number_of_students(sessionid, quizid, cmid, attemptid);}, POLLING_INTERVAL);\n\n  /* Teacher clicks the next button when they are ready to display the first question */\n  const nextQuestionAction = document.querySelector(Selectors.actions.nextButton);\n  nextQuestionAction.addEventListener('click', async (e) => {\n          e.preventDefault();\n          clearInterval(updateNumStudentsEvent);\n          updateNumStudentsEvent = null;\n\n          var  result = await fetch(M.cfg.wwwroot+'/mod/quiz/accessrule/tcquiz/quizdatateacher.php?requesttype=getquestion&quizid='\n            +quizid+'&cmid='+ cmid +'&attempt='+attemptid\n            +'&sessionid='+sessionid+'&rejoin=0&sesskey='+ M.cfg.sesskey,{method: 'POST'});\n\n          var response_xml_text = await result.text();\n\n          await  go_to_next_url(response_xml_text);\n\n    },{once: true});\n\n};\n\n\nexport const init = (sessionid, quizid, cmid, attemptid, POLLING_INTERVAL) => {\n  registerEventListeners(sessionid, quizid, cmid, attemptid, POLLING_INTERVAL);\n};\n\n\n/**\n * Update the number of students who connected to tcquiz\n * @param {sessionid} sessionid The id of the current session.\n * @param {quizid} quizid The quizid of the current quiz.\n * @param {cmid} cmid Course module id of the current quiz.\n * @param {attemptid} attemptid The attemptid of the teacher's preview. Needed for displaying the first question.\n */\nasync function update_number_of_students(sessionid, quizid, cmid, attemptid) {\n\n  var  result = await fetch(M.cfg.wwwroot+'/mod/quiz/accessrule/tcquiz/quizdatateacher.php?requesttype=getnumberstudents&quizid='\n    +quizid+'&sessionid='+sessionid+'&cmid='+ cmid +'&attempt='+attemptid\n    +'&currentquestion=0&sesskey='+ M.cfg.sesskey,{method: 'POST'});\n\n  var response_xml_text = await result.text();\n\n  await update_num_students_html(response_xml_text);\n\n}\n\n/**\n * Helper function to update the html with fetched number of connected students.\n * @param {string} response_xml_text The xml with the number of connected students returned from the server\n */\nfunction update_num_students_html(response_xml_text){\n\n  var parser = new DOMParser();\n  var response_xml = parser.parseFromString(response_xml_text, 'text/html');\n\n  var quizresponse = response_xml.getElementsByTagName('tcquiz').item(0);\n\n  var number_of_students = quizresponse.getElementsByTagName('numberstudents').item(0).textContent;\n\n  document.querySelector(Selectors.regions.numStudentsSpan).innerHTML = number_of_students;\n  //return;\n\n}\n\n/**\n * Helper function to parse a response from the server and go to the specified url.\n * The url should either be of the next quiz page of the final results.\n * The only responses should have url field\n * @param {string} response_xml_text The XML returned by quizdatateacher.php\n */\nfunction go_to_next_url(response_xml_text){\n\n  var parser = new DOMParser();\n  var response_xml = parser.parseFromString(response_xml_text, 'text/html');\n\n  var quizresponse = response_xml.getElementsByTagName('tcquiz').item(0);\n\n  var next_url = quizresponse.getElementsByTagName('url').item(0).textContent;\n  window.location.replace(next_url);\n\n}\n"],"names":["Selectors","actions","nextButton","regions","numStudentsSpan","registerEventListeners","sessionid","quizid","cmid","attemptid","POLLING_INTERVAL","updateNumStudentsEvent","setInterval","async","result","fetch","M","cfg","wwwroot","sesskey","method","response_xml_text","text","response_xml","DOMParser","parseFromString","number_of_students","getElementsByTagName","item","textContent","document","querySelector","innerHTML","update_num_students_html","update_number_of_students","addEventListener","e","preventDefault","clearInterval","next_url","window","location","replace","go_to_next_url","once","_exports","init"],"mappings":";;;;;;;;;;AAyBA,MAAMA,UAAY,CACdC,QAAS,CACLC,WAAY,iEAEZC,QAAS,CACLC,gBAAiB,0DAIvBC,uBAAyBA,CAACC,UAAWC,OAAQC,KAAMC,UAAWC,oBAElE,IAAIC,uBAAyBC,aAAYC,gBAmC3CA,eAAyCP,UAAWC,OAAQC,KAAMC,WAEhE,IAAKK,aAAeC,MAAMC,EAAEC,IAAIC,QAAQ,wFACrCX,OAAO,cAAcD,UAAU,SAAUE,KAAM,YAAYC,UAC3D,8BAA+BO,EAAEC,IAAIE,QAAQ,CAACC,OAAQ,SAErDC,wBAA0BP,OAAOQ,aAUvC,SAAkCD,mBAEhC,IACIE,cADS,IAAIC,WACSC,gBAAgBJ,kBAAmB,aAIzDK,mBAFeH,aAAaI,qBAAqB,UAAUC,KAAK,GAE9BD,qBAAqB,kBAAkBC,KAAK,GAAGC,YAErFC,SAASC,cAAc/B,UAAUG,QAAQC,iBAAiB4B,UAAYN,mBAjBhEO,CAAyBZ,mBA1CtBa,CAA0B5B,UAAWC,OAAQC,KAAMC,UAAU,GAAIC,kBAG/CoB,SAASC,cAAc/B,UAAUC,QAAQC,YACjDiC,iBAAiB,SAAStB,UACrCuB,EAAEC,iBACFC,cAAc3B,wBACdA,uBAAyB,KAEzB,IAAKG,aAAeC,MAAMC,EAAEC,IAAIC,QAAQ,kFACrCX,OAAO,SAAUC,KAAM,YAAYC,UACnC,cAAcH,UAAU,qBAAsBU,EAAEC,IAAIE,QAAQ,CAACC,OAAQ,SAEpEC,wBAA0BP,OAAOQ,aAyD/C,SAAwBD,mBAEtB,IACIE,cADS,IAAIC,WACSC,gBAAgBJ,kBAAmB,aAIzDkB,SAFehB,aAAaI,qBAAqB,UAAUC,KAAK,GAExCD,qBAAqB,OAAOC,KAAK,GAAGC,YAChEW,OAAOC,SAASC,QAAQH,UA/DTI,CAAetB,kBAAkB,GAE5C,CAACuB,MAAM,GAAM,EAOjBC,SAAAC,KAFkBA,CAACxC,UAAWC,OAAQC,KAAMC,UAAWC,oBACvDL,uBAAuBC,UAAWC,OAAQC,KAAMC,UAAWC,iBAAiB,CAyD7E"}